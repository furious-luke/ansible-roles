---

# - name: install psycopg2 on host
#   local_action: pip name=psycopg2
#   become: yes


- block:

    - name: install PostgreSQL (Mac OSX)
      homebrew: name=postgresql

    - name: launch at startup
      shell: ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents

    - name: launch now
      command: launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist

  when: ansible_distribution == "MacOSX"


- block:

    - name: install PostgreSQL (Ubuntu)
      apt: name={{ item }} state=latest
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
      become: yes

  when: ansible_distribution == "Ubuntu"


- block:

    - name: install PostgreSQL (Arch)
      pacman: name={{ item }} state=latest
      with_items:
        - postgresql
      become: yes

    - name: auto-restart on crash
      lineinfile:
        state: present
        dest: /usr/lib/systemd/system/postgresql.service
        line: Restart=always
        insertafter: \[Service\]

    - name: email on crash
      lineinfile:
        state: present
        dest: /usr/lib/systemd/system/postgresql.service
        line: OnFailure=crash-mail@%n.service
        insertafter: \[Unit\]

    - name: initialize database cluster
      command: initdb --locale en_US.UTF-8 -E UTF8 -D '/var/lib/postgres/data'
      args:
        creates: /var/lib/postgres/data/postgresql.conf
      become: yes
      become_user: postgres

    - name: enable PostgreSQL
      service: name=postgresql enabled=yes state=reloaded
      become: yes

    - name: add PostgreSQL user 
      postgresql_user: name={{ db_username }} password={{ db_password }} role_attr_flags=CREATEDB
      become: yes
      become_user: postgres

    - name: create database
      postgresql_db: name={{ db_name }} owner={{ db_username }} encoding='UTF-8'

  when: ansible_distribution == "Archlinux"
